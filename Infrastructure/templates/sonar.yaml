apiVersion: v1
items:
- kind: Secret
  apiVersion: v1
  data:
    database-name: c29uYXJxdWJl
    database-password: YWRtaW4=
    database-user: YWRtaW4=
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
      template.openshift.io/expose-database_name: '{.data[''database-name'']}'
      template.openshift.io/expose-password: '{.data[''database-password'']}'
      template.openshift.io/expose-username: '{.data[''database-user'']}'
    creationTimestamp: null
    labels:
      app: postgresql
      template: postgresql-persistent-template
    name: postgresql
  type: Opaque
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    labels:
      app: postgresql
    name: postgresql
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    labels:
      name: sonarqube
    name: sonarqube
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 2Gi
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    labels:
      app: postgresql
    name: postgresql
  spec:
    replicas: 1
    selector:
      name: postgresql
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: 
        limits:
          memory: 256Mi
        requests:
          memory: 256Mi
      type: Recreate
    template:
      metadata:
        labels:
          app: postgresql
          name: postgresql
      spec:
        containers:
        - env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: postgresql
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: postgresql
          - name: POSTGRESQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: postgresql
          image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - pg_isready -h 127.0.0.1 -p 5432
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c
                'SELECT 1'
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 512Mi
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: postgresql-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: postgresql-data
          persistentVolumeClaim:
            claimName: postgresql
    test: false
    triggers:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    generation: 1
    labels:
      app: sonarqube
    name: sonarqube
  spec:
    replicas: 1
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    strategy:
      activeDeadlineSeconds: 21600
      recreateParams:
        timeoutSeconds: 600
      resources: 
        limits:
          memory: 256Mi
        requests:
          memory: 256Mi
      type: Recreate
    template:
      metadata:
        labels:
          app: sonarqube
          deploymentconfig: sonarqube
      spec:
        containers:
        - env:
          - name: SONARQUBE_JDBC_USERNAME
            value: admin
          - name: SONARQUBE_JDBC_PASSWORD
            value: admin
          - name: SONARQUBE_JDBC_URL
            value: jdbc:postgresql://postgresql/sonarqube
          image: wkulhanek/sonarqube:6.7.4
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: 3Gi
              cpu: 1
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 80
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 60
          name: sonarqube
          ports:
          - containerPort: 9000
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 80
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 9000
            timeoutSeconds: 60
          volumeMounts:
          - mountPath: /opt/sonarqube/data
            name: sonarqube-volume-1
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sonarqube-volume-1
          persistentVolumeClaim:
            claimName: sonarqube
    test: false
    triggers:
- kind: Route
  apiVersion: v1
  metadata:
    labels:
      app: sonarqube
    name: sonarqube
  spec:
    port:
      targetPort: 9000-tcp
    to:
      kind: Service
      name: sonarqube
      weight: 100
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: postgresql
    name: postgresql
  spec:
    ports:
    - name: postgresql
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      name: postgresql
    type: ClusterIP
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: sonarqube
    name: sonarqube
  spec:
    ports:
    - name: 9000-tcp
      port: 9000
      protocol: TCP
      targetPort: 9000
    selector:
      app: sonarqube
      deploymentconfig: sonarqube
    type: ClusterIP
kind: List
metadata: {}
